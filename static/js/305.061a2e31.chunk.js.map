{"version":3,"file":"static/js/305.061a2e31.chunk.js","mappings":"qPAaMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAChBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAEN,SAASE,IAAoB,IAAD,IACzC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAiBpD,OAfAC,QAAQC,IAAI,QAASP,EAASI,QAE9BI,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCX,EADnC,mBAEHY,EAAAA,GAECC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACJf,EAASe,GACTN,QAAQC,IAAIK,EACb,IACAE,OAAM,SAAAC,GAAG,OAAIT,QAAQU,MAAMD,EAAlB,GACb,GAAE,CAACjB,KAGF,4BACE,SAAC,KAAD,CAAMmB,UAAU,WAAWC,GAAIhB,EAAaiB,QAA5C,qBAGW,OAAVvB,IACC,iBAAKqB,UAAU,cAAf,WACE,gBACEG,IAAG,0CAAqCxB,EAAMyB,aAC9CC,IAAK1B,EAAM2B,SAEb,iBAAKN,UAAU,kBAAf,WACE,wBAAKrB,EAAM2B,SACX,wCAAgB3B,EAAM4B,WAAWC,UAAjC,QACA,sCACA,uBAAI7B,EAAM8B,YACV,2BACE,mCACC9B,EAAM+B,OAAOC,KAAI,SAAAC,GAAE,OAClB,wBAAiBA,EAAGC,MAAXD,EAAGE,GADM,cAO5B,mDACA,SAAC,KAAD,CAASb,GAAG,OAAOD,UAAU,WAA7B,mBAGA,SAAC,KAAD,CAASC,GAAG,UAAUD,UAAU,WAAhC,sBAIA,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAAC5C,EAAD,OAC5B,SAAC,KAAD,CAAO2C,KAAK,UAAUC,SAAS,SAAC1C,EAAD,aAKxC,C,sDC7EM,IAGMiB,EAAa,CACtB0B,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAPG,wN","sources":["pages/MovieDetailsPage.js","util/apiOptions.js"],"sourcesContent":["import React, { Suspense, useEffect, useRef, useState, lazy } from 'react';\nimport {\n  useLocation,\n  Link,\n  NavLink,\n  Routes,\n  Route,\n  useParams,\n} from 'react-router-dom';\n\nimport { optionsGet } from 'util/apiOptions';\n\nimport Loader from 'components/Loader';\nconst CastPage = lazy(() => import('./CastPage'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams(); ///динамічний параметр;\n  const location = useLocation(); ///обєкт місце знаходження\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  console.log('state', location.state);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      optionsGet\n    )\n      .then(response => response.json())\n      .then(response => {\n        setMovie(response);\n        console.log(response);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link className=\"btnGoBag\" to={backLinkHref.current}>\n        Go back\n      </Link>\n      {movie !== null && (\n        <div className=\"styledMovie\">\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div className=\"styledMovieList\">\n            <h1>{movie.title}</h1>\n            <p>User Score: {movie.popularity.toFixed()}%</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <ul>\n              <h3>Genres</h3>\n              {movie.genres.map(el => (\n                <li key={el.id}>{el.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <p>Additional information</p>\n      <NavLink to=\"cast\" className=\"aboutMov\">\n        Cast\n      </NavLink>\n      <NavLink to=\"reviews\" className=\"aboutMov\">\n        Reviews\n      </NavLink>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<CastPage />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n","\nexport const apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzOGQyNzljNzQ2YzRmZmEwNGFhZGRiOTM2ZjdhYjcyYiIsInN1YiI6IjY1MzJjOWYwOGQyMmZjMDE0ZDdjZGNhYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Q2QOELtcsl6P3GVERTr6cJvS6c82ww5EyoFi9xIeAnI'\n\n\nexport const optionsGet = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${apiKey}`,\n    },\n  };"],"names":["CastPage","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","console","log","useEffect","fetch","optionsGet","then","response","json","catch","err","error","className","to","current","src","poster_path","alt","title","popularity","toFixed","overview","genres","map","el","name","id","Suspense","fallback","path","element","method","headers","accept","Authorization"],"sourceRoot":""}