{"version":3,"file":"static/js/123.035d150a.chunk.js","mappings":"oOAMe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCN,EADnC,kCAEHO,EAAAA,GAECC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIL,EAAWK,EAASE,QAAxB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACb,IAEGG,EAAQa,QACb,wBACGb,EAAQc,KAAI,SAAAC,GAAE,OACb,2BACE,qCAAaA,EAAGC,WAChB,uBAAID,EAAGE,YAFAF,EAAGG,GADC,OAQjB,mDAEH,C","sources":["pages/Reviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { optionsGet } from 'util/apiOptions';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      optionsGet\n    )\n      .then(response => response.json())\n      .then(response => setReviews(response.results))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return reviews.length ? (\n    <ul>\n      {reviews.map(el => (\n        <li key={el.id}>\n          <h4>Author: {el.author}</h4>\n          <p>{el.content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>Nothing found in Reviews</p>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetch","optionsGet","then","response","json","results","catch","err","console","error","length","map","el","author","content","id"],"sourceRoot":""}